from transformers import AutoTokenizer
import datasets
import jsonlines
import json
from tqdm import tqdm



tokenizer_path = "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\model\\tokenizer\\roberta"
tokenizer = AutoTokenizer.from_pretrained(tokenizer_path, add_prefix_space=True)

dataset_path = {
    "rte": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue\\rte",
    "sst2": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue\\sst2",
    "mrpc": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue\\mrpc",
    "qqp": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue\\qqp",
    "qnli": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue\\qnli",
    "mnli": "aa",
}
dataset_CLS_path = {
    "rte": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue_CLS\\rte_CLS",
    "sst2": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue_CLS\\sst2_CLS",
    "mrpc": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue_CLS\\mrpc_CLS",
    "qqp": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue_CLS\\qqp_CLS",
    "qnli": "D:\\zhujianhao\\2022\\20230929_VBGMMPFL\\data\\datasets\\glue_CLS\\qnli_CLS",
    "mnli": "aa",
}


split_name = {
    "train":"train",
    "validation":"valid",
}

input_name = {
    "rte": ["sentence1", "sentence2"],
    "sst2": ["sentence"], 
    "mrpc": ["sentence1", "sentence2"], 
    "qqp": ["question1", "question2"], 
    "qnli": ["question", "sentence"], 
    "mnli": ["premise", "hypothesis"]
}
output_name = "label"

def show_sen_len_hist(list, p):
    l = sorted(list)
    for i in range(p):
        print(i, int((i/p)*len(l)), l[int((i/p)*len(l))])
    print("max:" + str(max(list)))
    print("--------------------------------")

def make_CLS_dataset(name, split):
    split_NLG = split_name[split]
    path = dataset_path[name]
    CLS_path = dataset_CLS_path[name]
    inss = input_name[name]
    len_input_ids = []
    dataset = datasets.load_from_disk(path)
    with jsonlines.open(CLS_path + f"/{split_NLG}.jsonl", 'w') as w:
        print(name, split, len(dataset[split]))
        for i, item in enumerate(tqdm(dataset[split])):
            input_ids = []
            for ins in inss:
                p = tokenizer(item[ins])
                input_ids = input_ids + p["input_ids"]
            label = item[output_name]
            w.write({"input_ids":  input_ids, "label": label})
            len_input_ids.append(len(input_ids))
    show_sen_len_hist(len_input_ids, 20)


def read_CLS_file(name, split):
    CLS_path = dataset_CLS_path[name]
    samples = []
    with open(CLS_path + f"\\{split}.jsonl", 'r') as reader:
        for line in reader:
            items = json.loads(line.strip())
            input_ids = items['input_ids']
            label = items['label']
            samples.append([input_ids, label])
    return samples

# for dataset_name in ["rte", "sst2", "mrpc", "qqp", "qnli"]:
for dataset_name in ["qnli"]:
    for split in ["train", "validation"]:
        make_CLS_dataset(dataset_name, split)


"""
rte train 2490
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2490/2490 [00:00<00:00, 4088.86it/s] 
0 0 14
1 124 29
2 249 34
3 373 37
4 498 40
5 622 44
6 747 46
7 871 48
8 996 51
9 1120 54
10 1245 56
11 1369 59
12 1494 63
13 1618 67
14 1743 74
15 1867 85
16 1992 104
17 2116 120
18 2241 135
19 2365 156
max:290
--------------------------------
rte validation 277
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 277/277 [00:00<00:00, 4305.87it/s] 
0 0 19
1 13 30
2 27 34
3 41 37
4 55 39
5 69 41
6 83 44
7 96 47
8 110 49
9 124 52
10 138 54
11 152 57
12 166 60
13 180 65
14 193 71
15 207 78
16 221 100
17 235 118
18 249 133
19 263 155
max:248
--------------------------------
sst2 train 67349
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 67349/67349 [00:05<00:00, 11818.97it/s] 
0 0 4
1 3367 5
2 6734 5
3 10102 6
4 13469 6
5 16837 7
6 20204 8
7 23572 8
8 26939 9
9 30307 10
10 33674 11
11 37041 12
12 40409 13
13 43776 15
14 47144 17
15 50511 19
16 53879 21
17 57246 24
18 60614 28
19 63981 34
max:67
--------------------------------
sst2 validation 872
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 872/872 [00:00<00:00, 9407.44it/s] 
0 0 5
1 43 11
2 87 13
3 130 14
4 174 16
5 218 18
6 261 20
7 305 21
8 348 22
9 392 24
10 436 25
11 479 27
12 523 28
13 566 29
14 610 31
15 654 33
16 697 35
17 741 38
18 784 40
19 828 45
max:63
--------------------------------
mrpc train 3668
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 3668/3668 [00:00<00:00, 5134.94it/s] 
0 0 20
1 183 33
2 366 37
3 550 40
4 733 42
5 917 44
6 1100 46
7 1283 48
8 1467 50
9 1650 52
10 1834 54
11 2017 56
12 2200 58
13 2384 60
14 2567 61
15 2751 63
16 2934 65
17 3117 68
18 3301 70
19 3484 74
max:103
--------------------------------
mrpc validation 408
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 408/408 [00:00<00:00, 5117.08it/s] 
0 0 25
1 20 33
2 40 37
3 61 40
4 81 43
5 102 45
6 122 46
7 142 48
8 163 50
9 183 52
10 204 54
11 224 55
12 244 58
13 265 59
14 285 61
15 306 63
16 326 65
17 346 68
18 367 71
19 387 74
max:84
--------------------------------
qqp train 363846
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 363846/363846 [00:52<00:00, 6917.78it/s] 
0 0 7
1 18192 18
2 36384 20
3 54576 21
4 72769 22
5 90961 23
6 109153 24
7 127346 25
8 145538 26
9 163730 27
10 181923 28
11 200115 29
12 218307 30
13 236499 32
14 254692 34
15 272884 36
16 291076 38
17 309269 42
18 327461 47
19 345653 55
max:317
--------------------------------
qqp validation 40430
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 40430/40430 [00:05<00:00, 7144.96it/s] 
0 0 11
1 2021 18
2 4043 20
3 6064 21
4 8086 22
5 10107 23
6 12129 24
7 14150 25
8 16172 26
9 18193 27
10 20215 28
11 22236 29
12 24258 30
13 26279 32
14 28301 34
15 30322 36
16 32344 39
17 34365 42
18 36387 47
19 38408 55
max:190
--------------------------------
qnli train 104743
  2%|█████                                                                                                                                                                                                      | 2611/104743 [00:00<00:19, 5272.82it/s]Token indices sequence length is longer than the specified maximum sequence length for this model (556 > 512). Running this sequence through the model will result in indexing errors
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 104743/104743 [00:20<00:00, 5229.13it/s]
0 0 13
1 5237 28
2 10474 32
3 15711 34
4 20948 37
5 26185 39
6 31422 40
7 36660 42
8 41897 44
9 47134 46
10 52371 48
11 57608 50
12 62845 52
13 68082 54
14 73320 56
15 78557 59
16 83794 63
17 89031 67
18 94268 73
19 99505 83
max:566
--------------------------------
qnli validation 5463
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5463/5463 [00:01<00:00, 5169.41it/s] 
0 0 16
1 273 28
2 546 32
3 819 34
4 1092 37
5 1365 39
6 1638 41
7 1912 43
8 2185 45
9 2458 47
10 2731 49
11 3004 51
12 3277 53
13 3550 55
14 3824 58
15 4097 61
16 4370 64
17 4643 69
18 4916 76
19 5189 87
max:259
"""